
let _entraTenantId = '<Entra Tenant Id>';
let _environmentType = '<Environment Type>';
let _environmentName = '<Environment Name>';
let _companyName = '<Company Name>';
let _startTime = datetime('<Start Datetime>');
let _endTime = datetime('<End Datetime>');
let TableCount = (
traces
| where customDimensions.aadTenantId has_any (_entraTenantId)
| where customDimensions.environmentType has_any (_environmentType)
| where customDimensions.environmentName has_any (_environmentName)
| where customDimensions.companyName has_any (_companyName)
| where timestamp between (_startTime .. _endTime)// adjust as needed
| where customDimensions.eventId == 'RT0018' 
| where customDimensions.alObjectId > 0 // filter out internal server calls
| project 
timestamp
, extensionId = tostring(customDimensions.extensionId)
, extensionPublisher = tostring(customDimensions.extensionPublisher)
, extensionName = tostring(customDimensions.extensionName)
, alObjectId = tostring(customDimensions.alObjectId)
, alObjectName = tostring(customDimensions.alObjectName)
, alObjectType = tostring(customDimensions.alObjectType)
, alMethod = tostring(customDimensions.alMethod)
, executionTimeInMS = toreal(totimespan(customDimensions.executionTime))/10000 //the datatype for executionTime is timespan 
, dayBin = bin(timestamp,1d)
| extend day = strcat(strcat(format_datetime(dayBin, "yyyy-MM-dd"))," (Count)") 
| project-away timestamp, dayBin, executionTimeInMS
| sort by day asc 
| evaluate pivot(day, count())
);
TableCount
| join
(traces
| where customDimensions.aadTenantId has_any (_entraTenantId)
| where customDimensions.environmentType has_any (_environmentType)
| where customDimensions.environmentName has_any (_environmentName)
| where customDimensions.companyName has_any (_companyName)
| where timestamp between (_startTime .. _endTime)// adjust as needed
| where customDimensions.eventId == 'RT0018' 
| where customDimensions.alObjectId > 0 // filter out internal server calls
| project 
timestamp
, extensionId = tostring(customDimensions.extensionId)
, extensionPublisher = tostring(customDimensions.extensionPublisher)
, extensionName = tostring(customDimensions.extensionName)
, alObjectId = tostring(customDimensions.alObjectId)
, alObjectName = tostring(customDimensions.alObjectName)
, alObjectType = tostring(customDimensions.alObjectType)
, alMethod = tostring(customDimensions.alMethod)
, executionTimeInMS = toreal(totimespan(customDimensions.executionTime))/10000 //the datatype for executionTime is timespan 
, dayBin = bin(timestamp,1d)
| extend day = strcat(strcat(format_datetime(dayBin, "yyyy-MM-dd")), " (avg)")
| project-away timestamp, dayBin
| summarize Average = round(avg(executionTimeInMS),0) by extensionId, extensionPublisher, extensionName, alObjectType, alObjectId, alObjectName, alMethod, day
| sort by day asc 
| evaluate pivot(day,sum(Average))
)
on
$left.extensionId == $right.extensionId,
$left.extensionPublisher == $right.extensionPublisher,
$left.extensionName == $right.extensionName,
$left.alObjectType == $right.alObjectType,
$left.alObjectId == $right.alObjectId,
$left.alObjectName == $right.alObjectName,
$left.alMethod == $right.alMethod
| project-away extensionId1, extensionPublisher1, extensionName1, alObjectType1, alObjectId1, alObjectName1, alMethod1
